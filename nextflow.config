params{
    //CheckM2 database download
    checkm2_db = null
    checkm2_db_version = 14897628
    skip_checkm2 = false
    
    //MetaCerberus database download
    metacerberus_db = null
    skip_metacerberus = false
    
    //SNV to VCF conversion
    min_coverage = 0
    min_var_freq = 0
    include_nonvariant = false
    vcf_prefix = ''
    vcf_suffix = ''
    
    //Bin filtering
    min_completeness = 90
    max_contamination = 5

    //Input and output
    outdir = "results"
    publish_dir_mode = "copy"
    mag_paths = "mag_paths.tsv"
    reads_paths = "reads_paths.tsv"

    //Metadata
    params.metadata_file = 'metadata.csv'
}

includeConfig 'conf/base.config'

profiles {
debug {
        dumpHashes                                   = true
        process.beforeScript                         = 'echo $HOSTNAME'
        cleanup                                      = false
        nextflow.enable.configProcessNamesValidation = true
    }
docker {
        docker.enabled       = true
        conda.enabled        = false
        singularity.enabled  = false
        podman.enabled       = false
        shifter.enabled      = false
        charliecloud.enabled = false
        apptainer.enabled    = false
        docker.containerOptions    = '-u $(id -u):$(id -g)'
}
conda {
        conda.enabled        = true
        docker.enabled       = false
        singularity.enabled  = false
        podman.enabled       = false
        shifter.enabled      = false
        charliecloud.enabled = false
        conda.channels       = ['conda-forge', 'bioconda']
        apptainer.enabled    = false
    }
    mamba {
        conda.enabled        = true
        conda.useMamba       = true
        docker.enabled       = false
        singularity.enabled  = false
        podman.enabled       = false
        shifter.enabled      = false
        charliecloud.enabled = false
        apptainer.enabled    = false
    }
    arm {
        docker.containerOptions = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    podman {
        podman.enabled       = true
        conda.enabled        = false
        docker.enabled       = false
        singularity.enabled  = false
        shifter.enabled      = false
        charliecloud.enabled = false
        apptainer.enabled    = false
    }
    shifter {
        shifter.enabled      = true
        conda.enabled        = false
        docker.enabled       = false
        singularity.enabled  = false
        podman.enabled       = false
        charliecloud.enabled = false
        apptainer.enabled    = false
    }
    charliecloud {
        charliecloud.enabled = true
        conda.enabled        = false
        docker.enabled       = false
        singularity.enabled  = false
        podman.enabled       = false
        shifter.enabled      = false
        apptainer.enabled    = false
    }
    apptainer {
        apptainer.enabled    = true
        apptainer.autoMounts = true
        conda.enabled        = false
        docker.enabled       = false
        singularity.enabled  = false
        podman.enabled       = false
        shifter.enabled      = false
        charliecloud.enabled = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
}
}

apptainer.registry = 'quay.io'
docker.registry = 'quay.io'
podman.registry = 'quay.io'
singularity.registry = 'quay.io'
charliecloud.registry = 'quay.io'

// Capture execution reports
report {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_report.html"
    overwrite = true
}

// Capture execution timeline
timeline {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_timeline.html"
    overwrite = true
}

// Capture task resource consumption
trace {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_trace.txt"
    overwrite = true
}

manifest {
    name = "nf-core/magpopgen"
    description = "Population genetics metrics of MAGs"
    version = "0.1"
    nextflowVersion = "!>=24.04.2"
    homePage = "https://github.com/daasabogalro/mag-popgen"
}

includeConfig 'conf/modules.config'
