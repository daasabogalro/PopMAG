process{
    withName: CHECKM2_DATABASEDOWNLOAD {
        containerOptions = ''
        ext.args   = ''
        publishDir = [
            enabled : false
        ]
    }
    withName: CHECKM2_PREDICT {
        ext.args   = ''
        publishDir = [
                path: { "${params.outdir}/checkm2" },
                mode: params.publish_dir_mode,
                pattern: "*.{tsv}",
        ]
    }
    withName: TRANSFORM_CHECKM2_REPORT {
        ext.args   = ''
    }
    withName: FILTER_BINS {
        ext.args   = ''
        publishDir = [
                path: { "${params.outdir}/filtered_bins" },
                mode: params.publish_dir_mode,
        ]
    }
    withName: DREP {
        ext.args   = ''
        publishDir = [
            [
                path: { "${params.outdir}/dRep" },
                mode: params.publish_dir_mode,
                pattern: "dRep*"
            ],
            [
                path: { "${params.outdir}/competitive_mapping/concatenated_genomes" },
                mode: params.publish_dir_mode,
                pattern : "*concatenated.fa"
            ] 
        ]
    }
    withName: COVERM {
        ext.args   = ''
        publishDir = [
            path: { "${params.outdir}/coverm" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: GENERATE_HEATMAP {
        conda = "/opt/miniforge3/AI"
        ext.args   = ''
        publishDir = [
            path: { "${params.outdir}/coverm" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: BOWTIE2_INSTRAIN_BUILD {
        ext.args   = ''
        publishDir = [
            enabled : false
        ]
    }
    withName: BOWTIE2_INSTRAIN_ALIGN {
        ext.args   = '--very-sensitive'
        publishDir = [
            path: { "${params.outdir}/competitive_mapping/${meta.id}" },
            mode: params.publish_dir_mode,
            pattern: "*.{bam,bai}",
        ]
    }
    withName: EXTRACT_CONTIG_NAMES {
        ext.args   = ''
        publishDir = [
            path: { "${params.outdir}/competitive_mapping/${meta.id}_definition_files" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: PRODIGAL {
        ext.args = '-p meta'
        publishDir = [
            path: { "${params.outdir}/prodigal/${meta.sample}/${meta.id}" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: METACERBERUS_DATABASEDOWNLOAD {
        ext.args = ''
        publishDir = [
            enabled : false
        ]
    }
    withName: METACERBERUS_ANNOTATION {
        ext.args   = ''
        publishDir = [
            path: { "${params.outdir}/metacerberus" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: INSTRAIN_PROFILE {
        ext.args = ''
        publishDir = [
            path: { "${params.outdir}/instrain_profile/${meta.id}" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: SNVS_TO_VCF {
        ext.args = ''
        publishDir = [
            path: { "${params.outdir}/VCFs/${meta.id}" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: SUBSET_VCF_BY_GENOME {
        ext.args = ''
        publishDir = [
            path: { "${params.outdir}/VCFs/${meta.id}" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: POGENOM {
        ext.args = ''
        publishDir = [
            path: { "${params.outdir}/pogenom/${meta.sample}" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: INSTRAIN_COMPARE {
        ext.args = ''
        publishDir = [
            path: { "${params.outdir}/instrain_compare" },
            mode: params.publish_dir_mode,
        ]
    }
}
